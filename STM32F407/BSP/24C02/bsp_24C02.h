#ifndef __BSP_AT24C02_H
#define __BSP_AT24C02_H
/***********************************************************************************************************************************
 **【淘宝链接】  魔女开发板    https://demoboard.taobao.com
 ***********************************************************************************************************************************
 **【文件名称】  bsp_AT24C02.h
 **【功能描述】  定义器件地址、全局结构体、声明全局函数
 **
 **【适用平台】  STM32F407 + 标准库v1.8 + keil5
 ** 
 **【划 重 点】  1-AT24C02容量  = 2048bit = 2048/8Bit = 256字节
 **              2-读操作，可以发一次读指令后连续读
 **              3-写操作，要分页！！每个写指令，都要在一个页内进行。下一页要重新发送开始信号、写指令后再读;
 **                AT24C01/02每页有8个字节, AT24C02共有32页
 **                AT24C04/08A/16A每页有16个字节
 **              4-地址构成(8位)：位7:4固定为1010，3:1据芯片引脚电路设计而定，0位为读写控制位
 **                1  0  1  0  A2 A1 A0 R/W
 **                1  0  1  0  0  0  0  0   = 0XA0
 **                1  0  1  0  0  0  0  1   = 0XA1
 **
 **【移植说明】  本示例24C02操作，需要4个文件支持：bsp_I2CSoft.c和h、bsp_24C02.c和h
 **              引脚修改：在bsp_I2CSoft.h中修改，以方便IIC总线复用、代码复用
 **              设备地址：在本文件中修改
 **
 **【更新记录】  2023-11-11  完善代码、注释
 **              2021-05-03  完善文件格式、注释格式
 **              2020-03-05  创建
 **
***********************************************************************************************************************************/
#include "stm32f4xx.h"
#include "bsp_I2CSoft.h"
#include "bsp_UART.h"





/*****************************************************************************
 * 移植
 * 为配合多个设备共用一个IIC总线, 引脚在i2c.h文件中定义
*****************************************************************************/
#define  AT24C02_DEV_ADDR      0xA0    // 24C02的设备地址
#define  AT24C02_PAGE_SIZE        8    // 24C02的页面大小 
#define  AT24C02_SIZE           256    // 24C02总容量





/*****************************************************************************
 ** 全局变量
*****************************************************************************/
typedef struct
{
    uint8_t   initOK;                  // 初始化状态   0:失败, 1:成功
    char type[20];                     // 型号
    uint16_t  startupTimes;            // 记录启动次数
} xAT24C02_TypeDef;
extern xAT24C02_TypeDef  xAT24C02;     // 声明全局变量,方便记录数据





/*****************************************************************************
 ** 声明全局函数
*****************************************************************************/
uint8_t  AT24C02_Init(void);                                                           // 初始化IIC, 并检查是否正常，返回 0-失败，1-正常
uint8_t  AT24C02_ReadBytes (uint8_t _uDataAddr, uint8_t *_puDataBuf, uint16_t _uNum);  // 从指定地址开始写入指定长度的数据，返回：0-失败，1-成功
uint8_t  AT24C02_WriteBytes(uint8_t _uDataAddr, uint8_t *_puDataBuf, uint16_t _uNum);  // 从指定地址开始读出指定长度的数据，返回：0-失败，1-成功




#endif

